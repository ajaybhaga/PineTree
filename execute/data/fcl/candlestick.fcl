// Block definition (there may be more than one block per file)
FUNCTION_BLOCK candlestick

// Define input variables
VAR_INPUT

    a : REAL;
    b : REAL;
    c : REAL;
    d : REAL;

    curr_open : REAL;
    curr_high : REAL;
    curr_low :  REAL;
    curr_close : REAL;
    curr_size : REAL;

    prev_open : REAL;
    prev_high : REAL;
    prev_low :  REAL;
    prev_close : REAL;
    prev_size : REAL;

END_VAR

// Define output variable
VAR_OUTPUT
    engulfing : REAL;
    u_turn : REAL;
END_VAR

// Fuzzify input variable 'curr_open'
FUZZIFY curr_open
    TERM bullish := (curr_low, 0) (curr_high, 1); 
    TERM bearish := (curr_low, 1) (curr_high, 0);
END_FUZZIFY

// Fuzzify input variable 'curr_close'
FUZZIFY curr_close
    TERM bullish := (curr_low, 0) (curr_high, 1); 
    TERM bearish := (curr_low, 1) (curr_high, 0);
END_FUZZIFY

// Fuzzify input variable 'curr_size'
FUZZIFY curr_size
    TERM very_small := (a, 1) (b, 0); 
    TERM small := (a, 0) (b, 1) (c, 0);
    TERM big := (b, 0) (c, 1) (d, 0);
    TERM very_big := (c, 0) (d, 1);
END_FUZZIFY

// Defuzzify output variable 'curr_colour'
DEFUZZIFY curr_colour
    TERM white := 1;
    TERM black := 0;
    // Use 'Center Of Gravity' defuzzification method
    METHOD : COGS;
    // Default value is 0 (if no rule activates defuzzifier)
    DEFAULT := 0;
END_DEFUZZIFY

// Fuzzify input variable 'prev_open'
FUZZIFY prev_open
    TERM bullish := (prev_low, 0) (prev_high, 1); 
    TERM bearish := (prev_low, 1) (prev_high, 0);
END_FUZZIFY

// Fuzzify input variable 'prev_close'
FUZZIFY prev_close
    TERM bullish := (prev_low, 0) (prev_high, 1); 
    TERM bearish := (prev_low, 1) (prev_high, 0);
END_FUZZIFY

// Fuzzify input variable 'prev_size'
FUZZIFY prev_size
    TERM very_small := (a, 1) (b, 0); 
    TERM small := (a, 0) (b, 1) (c, 0);
    TERM big := (b, 0) (c, 1) (d, 0);
    TERM very_big := (c, 0) (d, 1);
END_FUZZIFY

// Defuzzify output variable 'prev_colour'
DEFUZZIFY prev_colour
    TERM white := 1;
    TERM black := 0;
    // Use 'Center Of Gravity' defuzzification method
    METHOD : COGS;
    // Default value is 0 (if no rule activates defuzzifier)
    DEFAULT := 0;
END_DEFUZZIFY

// Defuzzify output variable 'engulfing'
DEFUZZIFY engulfing
    TERM bullish := 1;
    TERM bearish := 0;
    // Use 'Center Of Gravity' defuzzification method
    METHOD : COGS;
    // Default value is 0 (if no rule activates defuzzifier)
    DEFAULT := 0;
END_DEFUZZIFY

// Defuzzify output variable 'u_turn'
DEFUZZIFY u_turn
    TERM bullish := 1;
    TERM bearish := 0;
    // Use 'Center Of Gravity' defuzzification method
    METHOD : COGS;
    // Default value is 0 (if no rule activates defuzzifier)
    DEFAULT := 0;
END_DEFUZZIFY

RULEBLOCK No1
    // Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : MIN;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;

    RULE 1 : IF curr_open IS bearish AND curr_close IS bullish 
                THEN curr_colour IS white;

    RULE 2 : IF curr_open IS bullish AND curr_close is bearish 
                THEN curr_colour IS black;

    RULE 3 : IF prev_open IS bearish AND prev_close IS bullish 
                THEN prev_colour IS white;

    RULE 4 : IF prev_open IS bullish AND prev_close is bearish 
                THEN prev_colour IS black;

    RULE 5 : IF prev_colour IS black AND curr_colour IS white AND curr_close > prev_open AND curr_open < prev_close
                THEN engulfing IS bullish;

    RULE 6 : IF prev_colour IS white AND curr_colour IS black AND curr_close < prev_open AND curr_open > prev_close
                THEN engulfing IS bearish;

    RULE 7 : IF prev_colour IS black AND curr_colour IS white AND ((prev_size IS very_small AND curr_size IS big) OR (prev_size IS small AND curr_size IS very_big)) THEN
                THEN u_turn IS bullish;

    RULE 8 : IF prev_colour IS white AND curr_colour IS black AND ((prev_size IS very_small AND curr_size IS big) OR (prev_size IS small AND curr_size IS very_big)) THEN
                THEN u_turn IS bearish;

             
END_RULEBLOCK

END_FUNCTION_BLOCK